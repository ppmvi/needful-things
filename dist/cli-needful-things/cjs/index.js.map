{"version":3,"file":"index.js","sources":["../../../src/cli/favicons/config.ts","../../../src/cli/favicons/index.ts","../../../src/cli/tinify/file.ts","../../../src/cli/tinify/index.ts"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\n\nconst filePath = path.resolve(process.cwd(), './.ppmvi.js');\nlet userConfig;\n\nif (fs.existsSync(filePath)) {\n  const file = require(filePath).default;\n  userConfig = file.favicons || {};\n}\n\nif (\n  userConfig &&\n  userConfig.master_picture &&\n  userConfig.master_picture.type === 'inline'\n) {\n  const image = path.resolve(process.cwd(), userConfig.master_picture.content);\n  if (fs.existsSync(image)) {\n    userConfig.master_picture.content = fs\n      .readFileSync(image)\n      .toString('base64');\n  }\n}\n\nconst defaultConfig = {\n  api_key: '',\n  master_picture: {\n    type: 'url',\n    url: '',\n  },\n  files_location: {\n    type: 'path',\n    path: '/static/icons',\n  },\n  favicon_design: {\n    desktop_browser: {},\n    ios: {\n      picture_aspect: 'background_and_margin',\n      margin: '8',\n      background_color: '#FFFFFF',\n      assets: {\n        ios6_and_prior_icons: false,\n        ios7_and_later_icons: false,\n        precomposed_icons: false,\n        declare_only_default_icon: true,\n      },\n    },\n    windows: {\n      picture_aspect: 'white_silhouette',\n      background_color: '#FFFFFF',\n      assets: {\n        windows_80_ie_10_tile: true,\n        windows_10_ie_11_edge_tiles: {\n          small: false,\n          medium: true,\n          big: false,\n          rectangle: false,\n        },\n      },\n    },\n    android_chrome: {\n      picture_aspect: 'background_and_margin',\n      margin: '12',\n      background_color: '#FFFFFF',\n      theme_color: '#FFFFFF',\n      manifest: {\n        name: 'My sample app',\n        display: 'standalone',\n        orientation: 'portrait',\n        start_url: '/',\n      },\n      assets: {\n        legacy_icon: false,\n        low_resolution_icons: false,\n      },\n    },\n    safari_pinned_tab: {\n      picture_aspect: 'black_and_white',\n      threshold: 60,\n      theme_color: '#FFFFFF',\n    },\n  },\n  settings: {\n    compression: '5',\n    scaling_algorithm: 'Mitchell',\n    error_on_image_too_small: true,\n    readme_file: false,\n    html_code_file: false,\n    use_path_as_is: true,\n  },\n};\n\nexport default { ...defaultConfig, ...userConfig };\n","import rfg from 'rfg-api';\nimport pify from 'pify';\nimport config from './config';\nimport ora from 'ora';\n\nexport default async function generate(path = './static/icons') {\n  const watcherSpinner = ora('Generating Favicons').start();\n  const generator = rfg.init();\n\n  try {\n    await pify(generator.generateFavicon)(config, path);\n    watcherSpinner.succeed();\n  } catch (err) {\n    watcherSpinner.fail(err.message);\n  }\n}\n","import fs from 'fs';\nimport path from 'path';\nimport png from 'png-metadata';\nimport { insert, dump, load, TagValues } from 'piexifjs';\n\nexport default class File {\n  static get EXIF_USER_COMMENT() {\n    return 'Compressed with TinyPNG by @ppmvi/needful-things';\n  }\n\n  static get PNG_TEXT_CHUNKG_FLAG() {\n    return 'tEXt';\n  }\n\n  readUserComment(filePath: string) {\n    let userComment = '';\n    const ext = path.extname(filePath);\n    const file = fs.readFileSync(filePath).toString('binary');\n\n    if (ext === '.png') {\n      const list = png.splitChunk(file);\n      const chunk = this.getUserCommentFromPngChunks(list);\n      userComment = chunk ? chunk.data : '';\n    } else {\n      const exifData = ext !== '.png' ? load(file)['Exif'] : undefined;\n      userComment =\n        typeof exifData !== 'undefined' &&\n        exifData[TagValues.ExifIFD.UserComment]\n          ? exifData[TagValues.ExifIFD.UserComment]\n          : '';\n    }\n\n    return userComment;\n  }\n\n  addUserComment(fileBuffer: string, filePath: string) {\n    const ext = path.extname(filePath);\n    let newData = fileBuffer;\n\n    if (ext === '.png') {\n      const list = png.splitChunk(fileBuffer);\n      if (!this.getUserCommentFromPngChunks(list)) {\n        const end = list.pop();\n        const newchunk = png.createChunk(\n          File.PNG_TEXT_CHUNKG_FLAG,\n          File.EXIF_USER_COMMENT\n        );\n        list.push(newchunk);\n        list.push(end);\n        newData = png.joinChunk(list);\n      }\n    } else {\n      const exifData = {\n        Exif: {\n          [TagValues.ExifIFD.UserComment]: File.EXIF_USER_COMMENT,\n        },\n      };\n      const exifBytes = dump(exifData);\n      newData = insert(exifBytes, fileBuffer);\n    }\n\n    return Buffer.from(newData, 'binary');\n  }\n\n  getUserCommentFromPngChunks(list: PngChunk[]) {\n    let chunk;\n    for (const item of list) {\n      if (item.type === File.PNG_TEXT_CHUNKG_FLAG) {\n        chunk = item;\n        break;\n      }\n    }\n    return chunk;\n  }\n}\n\ninterface PngChunk {\n  type: string;\n  data: string;\n}\n","import fs from 'fs';\nimport path from 'path';\nimport tinify from 'tinify';\nimport pify from 'pify';\nimport ora from 'ora';\nimport glob from 'glob';\nimport logSymbols from 'log-symbols';\nimport chalk from 'chalk';\nimport File from './file';\nimport { Separator, prompt, CheckboxChoiceOptions } from 'inquirer';\nimport { default as ISeparator } from 'inquirer/lib/objects/separator';\n\ninterface Options extends CheckboxChoiceOptions {\n  disabled: boolean | string;\n}\n\ninterface PpmviConfig {\n  favicons?: object;\n  tinify?: {\n    key?: string;\n  };\n}\n\nclass Tinify extends File {\n  private compressionsThisMonth: number | undefined;\n  private config: PpmviConfig = {};\n\n  constructor() {\n    super();\n    this.getConfig();\n  }\n\n  async run() {\n    try {\n      await this.setCompressionCount();\n\n      const choices = await this.getFiles();\n\n      const count = choices.filter(\n        (file) => !(file instanceof Separator) && !file.disabled\n      ).length;\n\n      if (count > 0) {\n        const { selectedFiles } = await prompt([\n          {\n            type: 'checkbox',\n            message: 'Select the files which should be compressed.',\n            name: 'selectedFiles',\n            pageSize: choices.length,\n            choices,\n            validate: (answer) => {\n              if (answer.length < 1) {\n                return 'You must at least choose one image.';\n              }\n\n              return true;\n            },\n          },\n        ]);\n\n        const { compress, addCompressFlag } = await prompt([\n          {\n            type: 'confirm',\n            message: `You are about to compress the selected images. Do you want to continue?`,\n            name: 'compress',\n            default: true,\n          },\n          {\n            type: 'confirm',\n            message: `Do you want to add a compressed flag to the file name? eg. test_compressed.png`,\n            name: 'addCompressFlag',\n            default: false,\n            when: ({ compress }) => compress,\n          },\n        ]);\n\n        if (compress) await this.doCompression(selectedFiles, addCompressFlag);\n      } else {\n        console.log(\n          logSymbols.info,\n          chalk.bold(`You already compressed all images.`)\n        );\n      }\n    } catch (err) {\n      console.log(err);\n      console.log(\n        logSymbols.error,\n        chalk.bold(`Looks like your key is not valid.`)\n      );\n    }\n  }\n\n  async doCompression(selectedFiles = [], addCompressFlag = false) {\n    for (const file of selectedFiles) {\n      const filePath = process.cwd() + file;\n      const dir = path.dirname(filePath);\n      const ext = path.extname(filePath);\n      const name = path.basename(filePath).replace(ext, '');\n      const compressFlag = addCompressFlag ? '_compressed' : '';\n      const fileBuffer = fs.readFileSync(filePath);\n      const spinner = ora(`Compressing ${name}${ext}`).start();\n      let result;\n\n      try {\n        result = await new Promise<Uint8Array>((resolve, reject) => {\n          tinify.fromBuffer(fileBuffer).toBuffer((err, result) => {\n            if (err) reject(err);\n            resolve(result);\n          });\n        });\n      } catch (err) {\n        spinner.fail(err.message);\n        break;\n      }\n\n      fs.writeFileSync(\n        `${dir}/${name}${compressFlag}${ext}`,\n        this.addUserComment(result.toString(), filePath)\n      );\n      spinner.succeed();\n    }\n  }\n\n  async getFiles(): Promise<Array<Options | ISeparator>> {\n    const files = (await pify(glob)(\n      process.cwd() + '/src/**/*.{png,jpg,jpeg}',\n      {}\n    )) as string[];\n    let curPath = '';\n\n    return files.reduce((result: Array<Options | ISeparator>, value, key) => {\n      const name = value.replace(process.cwd(), '');\n\n      if (!curPath) curPath = path.dirname(name);\n      else if (curPath && curPath !== path.dirname(name)) {\n        result.push(new Separator('----------'));\n        curPath = path.dirname(name);\n      }\n\n      result.push({\n        name,\n        checked: true,\n        disabled:\n          name.match(/compressed/) ||\n          this.readUserComment(value).includes(File.EXIF_USER_COMMENT)\n            ? 'Already compressed'\n            : false,\n      });\n      return result;\n    }, []);\n  }\n\n  async setCompressionCount() {\n    try {\n      await new Promise((resolve, reject) => {\n        tinify.validate((err) => {\n          if (err) reject(err);\n          resolve();\n        });\n      });\n      this.compressionsThisMonth = tinify.compressionCount;\n\n      if (typeof this.compressionsThisMonth === 'undefined') {\n        console.log(\n          logSymbols.info,\n          chalk.bold(\n            `Couldnt get the compressions count. You probably havent done any compressions.`\n          )\n        );\n      } else {\n        console.log(\n          logSymbols.info,\n          chalk.bold(\n            `You already used ${this.compressionsThisMonth}/500 free compressions this month.`\n          )\n        );\n      }\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  getConfig() {\n    const filePath = path.resolve(process.cwd(), './.ppmvi.js');\n    let config = {\n      tinify: { key: '' },\n    };\n    let userConfig = {};\n    if (fs.existsSync(filePath)) userConfig = require(filePath).default;\n\n    this.config = {\n      ...config,\n      ...userConfig,\n    };\n  }\n}\n\nexport default async function tinifyImages() {\n  const tinifyClass = new Tinify();\n  await tinifyClass.run();\n}\n"],"names":["load","TagValues","dump","insert","Separator","prompt"],"mappings":"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"}